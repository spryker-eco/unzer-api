name: CI

env:
    APPLICATION_ENV: 'development'
    APPLICATION_STORE: 'DE'
    PROJECT: 'UnzerApi'
    SPRYKER_DB_VERSION: 10.2
    SPRYKER_DB_HOST: 127.0.0.1
    SPRYKER_DB_PORT: 3306
    SPRYKER_DB_DATABASE: eu-docker
    SPRYKER_DB_USERNAME: root
    SPRYKER_DB_PASSWORD: secret
    SPRYKER_DB_ROOT_PASSWORD: secret
    SPRYKER_DB_ALLOW_EMPTY_PASSWORD: false
    SPRYKER_DB_CHARACTER_SET: utf8
    SPRYKER_DB_COLLATE: utf8_general_ci

on:
    pull_request:
    push:
        branches:
            - master
    workflow_dispatch:

jobs:
    ci:
        name: 'UnzerApi'
        runs-on: ubuntu-18.04
        strategy:
            fail-fast: false
            matrix:
                php: ['7.4']

        steps:
            - uses: actions/checkout@v3

            - name: Setup Database
              uses: getong/mariadb-action@v1.1
              with:
                  host port: ${{ env.SPRYKER_DB_PORT }}
                  container port: ${{ env.SPRYKER_DB_PORT }}
                  character set server: ${{ env.SPRYKER_DB_CHARACTER_SET }}
                  collation server: ${{ env.SPRYKER_DB_COLLATE }}
                  mariadb version: ${{ env.SPRYKER_DB_VERSION }}
                  mysql database: ${{ env.SPRYKER_DB_DATABASE }}
                  mysql root password: ${{ env.SPRYKER_DB_ROOT_PASSWORD }}
                  mysql user: ${{ env.SPRYKER_DB_USERNAME }}
                  mysql password: ${{ env.SPRYKER_DB_PASSWORD }}

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: mbstring, intl, bcmath
                  tools: composer:v2

            - name: Configure sysctl limits
              run: |
                  sudo swapoff -a
                  sudo sysctl -w vm.swappiness=1
                  sudo sysctl -w fs.file-max=262144
                  sudo sysctl -w vm.max_map_count=262144

            - name: Composer get cache directory
              id: composer-cache
              run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Composer cache
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Composer validate
              run: composer validate

            - name: Composer install
              run: |
                  composer --version
                  composer install

            - name: Run codestyle checks
              run: composer cs-check

            - name: Run codeception tests (currently not running properly)
              run: composer test

            - name: Run PHPStan
              run: composer stan

    lowest:
        name: Prefer Lowest
        runs-on: ubuntu-18.04

        steps:
            - name: Checkout@v2
              uses: actions/checkout@v3

            - name: Validate composer.json and composer.lock
              run: composer validate

            - name: Composer get cache directory
              id: composer-cache
              run: |
                  echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Composer cache
              uses: actions/cache@v2
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '7.4'
                  extensions: mbstring, intl, bcmath

            - name: Composer prefer lowest
              run: composer lowest-setup

            - name: Run PHPStan (currently not running properly)
              run: composer stan || true

            - name: Validate prefer lowest
              run: vendor/bin/validate-prefer-lowest -m
